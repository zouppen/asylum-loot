#!/usr/bin/env php
<?php

require(__DIR__.'/common.php');

// Slack API Token (Requires 'users:read' scope)
$slack_token = file_get_contents(__DIR__.'/token.txt');
$api_url = "https://slack.com/api/users.list";

if ($slack_token === false) {
    die("Slack token file not found\n");
}

// Initialize cURL session
$curl = curl_init();
if ($curl === false) {
    die("Curl initialization failed\n");
}

// Set cURL options using curl_setopt_array
if (curl_setopt_array($curl, [
    CURLOPT_URL => $api_url,
    CURLOPT_HTTPHEADER => [
        "Authorization: Bearer $slack_token",
    ],
    CURLOPT_FAILONERROR => true,
    CURLOPT_RETURNTRANSFER => true,
    //CURLOPT_VERBOSE => true,
]) === false) {
    die("Setting curl options failed\n");
}

// Execute cURL request and close session
$response = curl_exec($curl);
if ($response === false) {
    die("Unable to load users from Slack\n");
}
curl_close($curl);

// Decode response
$data = json_decode($response, true);
if ($data === null) {
    die("Unable to load decode Slack response\n");
}

if ($data['response_metadata']['next_cursor'] !== '') {
    die("TODO pagination support missing. Can't load all of them!\n");
}

// Prepare SQL
$db = init_db();
$db->exec('BEGIN; DROP TABLE IF EXISTS slack; CREATE TABLE slack (id,name,deleted,real_name,title,displayname,email,email_norm,bot,updated,email_confirmed);');
$stmt = $db->prepare('INSERT INTO slack VALUES (:id,:name,:deleted,:real_name,:title,:displayname,:email,:email_norm,:bot,:updated,:email_confirmed)');

$count = 0;

foreach ($data['members'] as $member) {
    //var_dump($member);
    $email = @$member['profile']['email'];
    $stmt->bindValue(':id', $member['id']);
    $stmt->bindValue(':name', $member['name']);
    $stmt->bindValue(':deleted', $member['deleted']);
    $stmt->bindValue(':real_name', $member['profile']['real_name']);
    $stmt->bindValue(':title', $member['profile']['title']);
    $stmt->bindValue(':displayname', $member['profile']['display_name']);
    $stmt->bindValue(':email', $email);
    $stmt->bindValue(':email_norm', normalize_email($email));
    $stmt->bindValue(':bot', $member['is_bot']);
    $stmt->bindValue(':updated', $member['updated']);
    $stmt->bindValue(':email_confirmed', @$member['is_email_confirmed']);

    $stmt->execute();
    $count++;
}

$db->exec('END');
print("Parsed $count Slack accounts\n");
